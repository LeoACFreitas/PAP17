@model TeamUp.ViewModels.FormularioProjetoViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section title{ @Model.GetModo() de Projeto }

@section header {    
    <link href="~/res/css/FormularioProjeto.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            $(document.body).on('change', '#ImagemLogo', function () {
                readURL(this, '#logoPreview');
            });
            $(document.body).on('change', '#ImagemCapa', function () {
                readURL(this, '#capaPreview');
            });
            $(document.body).on('input', '#Projeto_Progresso', function () {
                $("#valorProgresso").text(this.value + '%');
            });
            $("#addVaga").on("click", function () {
                $(".vagas").children().each(function () {
                    if ($(this).css('display') == 'none') {
                        $(this).fadeIn();
                        return false;
                    }
                });
                checkVagas();
            });
        });

        function checkVagas() {
            var vagaFound;
            $(".vagas").children().each(function () {
                if ($(this).css('display') == 'none') {
                    vagaFound = true;
                    return false;
                }
            });
            if (!vagaFound) {
                $("#addVaga").parent().hide();
            } else {
                $("#addVaga").parent().show();
            }
        }

        function closeVaga(id) {
            var callback = function () {
                $("#" + id + ".vagaContainer > div").children().each(function () {
                    if ($(this).attr('class') != 'vagaId') {
                        $(this).val('');
                    } else {
                        $(this).val('0');
                    }
                });
                checkVagas();
            }
            $("#" + id + ".vagaContainer").fadeOut(callback);

        }
    </script>
}

@section content{
    
    <form method="post" id="formProjeto" class="col-xs-12" enctype="multipart/form-data" action="@Url.Action("EfetuaCadastro")">
        @if (Model.ModoValor == TeamUp.ViewModels.FormularioProjetoViewModel.Modo.Cadastro)
        {
            <h1 class="titulo">Cadastrar projeto</h1>
        }
        else
        {
            <h1 class="titulo">Alterar projeto</h1>
        }

        <div class="smallInput">
            @Html.LabelFor(m => m.Projeto.Nome)
            @Html.TextBoxFor(m => m.Projeto.Nome, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Projeto.Nome)

            @Html.LabelFor(m => m.Projeto.Descricao)
            @Html.TextBoxFor(m => m.Projeto.Descricao, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Projeto.Descricao)
        </div>

        <div class="smallInput">
            <label for="Projeto_Progresso">Progresso</label>
            <span id="valorProgresso" class="inputTip">
                @(Model.Projeto.Progresso != null ? Model.Projeto.Progresso : 0)%
            </span>
            <input id="Projeto_Progresso" type="range" min="0" max="100" value="@(Model.Projeto.Progresso != null ?
                Model.Projeto.Progresso : 0)" list="tickmarks" name="Projeto.Progresso"/>
            <datalist id="tickmarks">
                <option value="0">
                <option value="10">
                <option value="20">
                <option value="30">
                <option value="40">
                <option value="50">
                <option value="60">
                <option value="70">
                <option value="80">
                <option value="90">
                <option value="100">
            </datalist>

            @{Model.Categorias.Insert(0, new TeamUp.Models.CategoriaProjeto() { Id = 0, Nome = "Selecione..." });}
            <label>Categoria</label>
            @Html.DropDownListFor(m => m.IdCategoriaSelecionada, new MultiSelectList(Model.Categorias, "Id", "Nome"),
            new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.IdCategoriaSelecionada)
        </div>

        <div style="width: 80%; margin: 0 auto">
            @Html.LabelFor(m => m.Projeto.Sobre)
            @Html.TextAreaFor(m => m.Projeto.Sobre, new { @class = "form-control", placeholder = "Descreva o seu projeto..." })
            @Html.ValidationMessageFor(m => m.Projeto.Sobre)
        </div>

        <hr style="margin-top: 30px;" />

        <h3 class="titulo">Vagas</h3>
        <div class="vagas">
            @for (int i = 0; i < 5; i++)
            {
                <div id="@i" class="vagaContainer" style="@(i == 0 || (Model.Vagas != null && Model.Vagas[i].Funcao != null) ? "" : "display:none")">
                    <div class="vagaContent">
                        <span class="closeVaga" onclick="closeVaga(@i)">x</span>

                        @Html.LabelFor(m => m.Vagas[i].Funcao)
                        @Html.TextBoxFor(m => m.Vagas[i].Funcao, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Vagas[i].Funcao)

                        @Html.LabelFor(m => m.Vagas[i].Descricao)
                        @Html.TextAreaFor(m => m.Vagas[i].Descricao, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Vagas[i].Descricao)

                        @if (Model.ModoValor == TeamUp.ViewModels.FormularioProjetoViewModel.Modo.Alteracao)
                        {
                            <input type="hidden" class="vagaId" name="@Html.NameFor(m => m.Vagas[i].Id)" value="@(Model.Vagas[i] != null ? Model.Vagas[i].Id.ToString() : "")" />
                        }

                        @Html.ValidationMessage("Vaga" + i)
                    </div>
                </div>
            }

            <div class="vagaContainer" style="display: flex;align-items: center;">
                <div id="addVaga">
                    <h1>+</h1>
                </div>
            </div>

            @if (Html.ViewData.ModelState["other"] != null)
            {
                <ul>
                    @foreach (var error in Html.ViewData.ModelState["other"].Errors)
                    {
                        <li class="field-validation-error">@error.ErrorMessage</li>
                    }
                </ul>
            }
        </div>

        <hr />

        @Html.HiddenFor(m => m.ModoValor)
        @Html.HiddenFor(m => m.Projeto.Id)
        @if (Model.IdCategoriaSelecionada != 0)
        {
            @Html.HiddenFor(m => m.IdCategoriaSelecionada)
        }

        <div id="logoWrapper">
            <div id="logoPreview" style="@(Model.ModoValor == TeamUp.ViewModels.FormularioProjetoViewModel.Modo.Alteracao ?
                                    Html.BackgroundImage(Model.Projeto.Id, ImageType.ProjetoLogo) : "")">
                <div class="previewContent">
                    <input id="ImagemLogo" name="ImagemLogo" class="invisibleElement" type="file" />
                    <label for="ImagemLogo" class="imageLabel"><img src="/res/img/upload.png" width="25" /> Logo</label>
                    @Html.ValidationMessage("ImagemLogo")
                </div>
            </div>
        </div>

        <div id="capaWrapper" class="col-xs-12">
            <div id="capaPreview" style="@(Model.ModoValor == TeamUp.ViewModels.FormularioProjetoViewModel.Modo.Alteracao ?
                                    Html.BackgroundImage(Model.Projeto.Id, ImageType.ProjetoCapa) : "")">
                <div class="previewContent">
                    <input id="ImagemCapa" name="ImagemCapa" class="invisibleElement" type="file" />
                    <label for="ImagemCapa" class="imageLabel"><img src="/res/img/upload.png" width="25" /> Capa</label>
                    @Html.ValidationMessage("ImagemCapa")
                </div>
            </div>
        </div>

        <input class="btn btn-default" type="submit" style="margin-bottom: 10px" />

    </form>

}