@model TeamUp.ViewModels.FormularioUsuarioViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section title{ @Model.GetModo() de Usuário }

@section header{    
    <link href="~/res/css/FormularioUsuario.css" rel="stylesheet" />
}

@section content{

    @{ IHtmlString campoObrigatorio = Model.ModoValor == TeamUp.ViewModels.FormularioUsuarioViewModel.Modo.Cadastro ? Html.Raw("<span class=\"atencao\">*</span>") : Html.Raw(""); }
    
    <div id="formWrapper">
        <form method="post" class="mainForm" enctype="multipart/form-data" action="@Url.Action("EfetuaCadastro")">

            @if (Model.ModoValor == TeamUp.ViewModels.FormularioUsuarioViewModel.Modo.Cadastro)
            {
                <h1 class="titulo">Cadastre-se</h1>
            }
            else
            {
                <h1 class="titulo">Alteração de cadastro</h1>
            }

            @Html.LabelFor(m => m.Usuario.PrimeiroNome)@campoObrigatorio
            @Html.TextBoxFor(m => m.Usuario.PrimeiroNome, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Usuario.PrimeiroNome)

            @Html.LabelFor(m => m.Usuario.UltimoNome)@campoObrigatorio
            @Html.TextBoxFor(m => m.Usuario.UltimoNome, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Usuario.UltimoNome)

            @Html.LabelFor(m => m.Usuario.Email)@campoObrigatorio
            @Html.TextBoxFor(m => m.Usuario.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Usuario.Email)

            @if (Model.ModoValor == TeamUp.ViewModels.FormularioUsuarioViewModel.Modo.Cadastro)
            {
                @Html.LabelFor(m => m.Usuario.Senha)@campoObrigatorio
                @Html.PasswordFor(m => m.Usuario.Senha, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Usuario.Senha)

                <label for="senhaConfimacao">Confirme a Senha</label><span class="atencao">*</span>
                <input type="password" id="senhaConfimacao" onblur="confirmaSenha(this, 'Usuario_Senha', 'spanSenhaConfimacao')" class="form-control" />
                <span id="spanSenhaConfimacao" class="field-validation-error"></span>
            }

            @Html.LabelFor(m => m.Usuario.DescricaoPessoal)
            @Html.TextAreaFor(m => m.Usuario.DescricaoPessoal, new { @class = "form-control", placeholder = "Conte um pouco sobre você..." })
            @Html.ValidationMessageFor(m => m.Usuario.DescricaoPessoal)

            @Html.HiddenFor(m => m.ModoValor)
            @if (Model.ModoValor == TeamUp.ViewModels.FormularioUsuarioViewModel.Modo.Alteracao)
            {
                @Html.HiddenFor(m => m.Usuario.Id)
            }

            <label>Imagem de Perfil</label>
            <input name="ImagemPerfil" type="file" style="margin: 10px 0 15px;" />

            @if (Model.ModoValor == TeamUp.ViewModels.FormularioUsuarioViewModel.Modo.Cadastro)
            {
                <p class="atencao">* Campos obrigatórios</p>
            }

            <input type="submit" class="btn btn-default" />

        </form>
    </div>

    @if (Model.ModoValor == TeamUp.ViewModels.FormularioUsuarioViewModel.Modo.Alteracao)
    {
    <!--Colocar em uma janela e fazer a requisição por AJAX, colocando dentro do form já existente-->
        <div id="alteracaoSenha" style="display:none">
            @Html.PasswordFor(m => m.VerificacaoSenhaAlteracao, new { @class = "alteracaoSenha"})
            @Html.ValidationMessageFor(m => m.VerificacaoSenhaAlteracao)

            @Html.PasswordFor(m => m.Usuario.Senha, new { @class = "alteracaoSenha"})
            @Html.ValidationMessageFor(m => m.Usuario.Senha)

            <input type="password" id="senhaConfimacaoAlteracao" onblur="confirmaSenha(this, 'Usuario_Senha.alteracaoSenha', 'spanSenhaConfimacao.alteracaoSenha')"/>
            <span id="spanSenhaConfimacao" class="alteracaoSenha"></span>
        </div>
    }

}
